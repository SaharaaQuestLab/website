---
import { Icon } from "astro-icon/components";
import TextCarousel from "./TextCarousel.astro";

interface Props {
  className?: string
  titleClassName?: string
  titles: {
    texts: string[];
    subDescriptions?: string[];
    description: string;
    button?: {
      text: string;
      url?: string;
    };
  };
}
const { texts, description, button, subDescriptions } = Astro.props.titles;
const {className, titleClassName} = Astro.props;


---

<div
  class="h-screen flex flex-col items-center justify-center relative top-0 left-0 pointer-events-none"
>
  {
    texts.map((item) => (
      <h1 class:list={["text-h2 tablet:text-m1 mobile:text-m2 mobile:whitespace-normal mobile:text-center whitespace-nowrap font-[Manrope] pointer-events-none", titleClassName]}>
        {item}
      </h1>
    ))
  }

  <div
    class:list={[ className ,"text-light-200 text-s2 tablet:text-sm tablet:!w-[30rem] mobile:!w-[22rem] w-[52rem] pointer-events-none text-center mt-10 tablet:mt-7 font-[Manrope]"]}
  >
    {description}
  </div>
  {subDescriptions && <TextCarousel list={subDescriptions} />}

  <!-- link button -->
  {
    button && (
      <div class="link-btn border w-max whitespace-nowrap tablet:text-sm tablet:h-11 mobile:w-[9.125rem] font-[IBMPlexMono-Medium] mobile:text-xs border-light-100 text-base cursor-pointer py-2.5 px-4 flex items-center rounded-xl mt-10 tablet:mt-7 text-[#FFFFFF] pointer-events-auto" data-link={button.url}>{button.text}<Icon class="min-w-5 h-5" name="arrowRightUp" />
      </div>
    )
  }
</div>

<style></style>


<script>
  // Find all buttons with the `alert` class on the page.
  const buttons = document.querySelectorAll('div.link-btn');

  // Handle clicks on each button.
  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      const url = button.getAttribute('data-link');
      if (url) {
        window.open(url, "_blank");
      }
    });
  });
</script>