---

---

<div
  id="ringSection"
  class="h-screen w-full flex justify-around items-center px-4"
>
  <div class="w-0.5 h-[20rem] bg-dark-100">
    <div id="ringProgress" class="bg-light-100 h-1/3 w-full"></div>
  </div>

  <ul class="h-[50rem] relative w-[36.125rem] font-[Manrope]">
    <li
      class="section-start flex flex-col gap-7 h-[50rem] absolute inset-0 left-14 translate-y-1/4 opacity-1"
    >
      <h1 class="text-sm">#1</h1>
      <h1 class="text-h2">
        <div class="mb-[0.875rem]">Own your</div>
        <div>knowledge</div>
      </h1>
      <div class="mt-7">
        Use blockchain infrastructure that's trustless, permissionless, and
        privacy-preserving so your information stays under your control.
      </div>
    </li>
    <li
      class="section-mid flex flex-col gap-7 h-[50rem] absolute inset-0 left-14 translate-y-full opacity-0"
    >
      <h1 class="text-sm">#2</h1>
      <h1 class="text-h2">
        <div class="mb-[0.875rem]">Scale your</div>
        <div>knowledge</div>
      </h1>
      <div class="mt-7">
        Create autonomous Al agents that expand the impact of your knowledge
        base, skills, and expertise and are customized to meet your needs.
      </div>
    </li>
    <li
      class="section-end flex flex-col gap-7 h-[50rem] absolute inset-0 left-14 translate-y-full opacity-0"
    >
      <h1 class="text-sm">#3</h1>
      <h1 class="text-h2">
        <div class="mb-[0.875rem]">Monetize your</div>
        <div>knowledge</div>
      </h1>
      <div class="mt-7">
        Join the decentralized ecosystem of global knowledge capital to leverage
        your data for novel income opportunities.
      </div>
    </li>
  </ul>

  <div class="flex w-[520px] justify-center items-center">
    <div id="ring-3d" class="w-[520px] h-[520px]"></div>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import RingView from "@/webgl/RingView";

  gsap.registerPlugin(ScrollTrigger);

  const viewEl = document.getElementById("ring-3d");
  const viewer = new RingView(viewEl || document.createElement("div"));
  viewer.useSetup();

  const SCROLL_HEIGHT = 500;

  //head section
  gsap
    .timeline({
      scrollTrigger: {
        trigger: "#ringSection",
        start: () => `top top`,
        end: () => `+=${SCROLL_HEIGHT + 230}px`,
        scrub: true,
        toggleActions: "play none reverse none",
        invalidateOnRefresh: true,
      },
    })
    .to("#ringSection .section-start", {
      duration: 0.5,
    })
    .to("#ringSection .section-start", {
      duration: 0.5,
      opacity: 0.0,
      y: "-50%",
    });

  gsap
    .timeline({
      scrollTrigger: {
        trigger: "#ringSection",
        start: () => `top -${SCROLL_HEIGHT - 230}px`,
        end: () => `+=${SCROLL_HEIGHT + 230}px`,
        scrub: true,
        toggleActions: "play none reverse none",
        invalidateOnRefresh: true,
      },
    })
    .to("#ringProgress", {
      duration: 0.5,
      height: "66.6666%",
    })
    .to("#ringSection .section-mid", {
      duration: 0.5,
      opacity: 1,
      y: "25%",
      onComplete: () => {
        viewer.setSceneTwo();
      },
    })
    .to("#ringSection .section-mid", {
      duration: 0.5,
      opacity: 1,
      y: "25%",
    })
    .to("#ringSection .section-mid", {
      duration: 0.5,
      opacity: 0.2,
      y: "-50%",
    });

  gsap
    .timeline({
      scrollTrigger: {
        trigger: "#ringSection",
        start: () => `top -${SCROLL_HEIGHT * 2 - 460}px`,
        end: () => `+=${SCROLL_HEIGHT}px`,
        scrub: true,
        toggleActions: "play none reverse none",
        invalidateOnRefresh: true,
      },
    })
    .to("#ringProgress", {
      duration: 0.5,
      height: "100%",
    })
    .to("#ringSection .section-end", {
      duration: 0.5,
      opacity: 1,
      y: "25%",
      onComplete: () => {
        viewer.setSceneThree();
      },
    });

  ScrollTrigger.create({
    trigger: "#ringSection",
    scrub: true,
    start: "top bottom",
    end: "bottom top",
    onEnter: () => {
      viewer.play();
    },
    onLeaveBack: () => {
      viewer.stop();
    },
  });

  ScrollTrigger.create({
    trigger: "#ringSection",
    scrub: true,
    pin: true,
    start: () => "top top",
    end: () => `+=${3 * SCROLL_HEIGHT}px`,
    onEnterBack: () => {
      viewer.play();
    },
    onLeave: () => {
      viewer.stop();
    },
    invalidateOnRefresh: true,
    anticipatePin: 1,
  });
</script>
