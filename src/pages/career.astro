---
import TitleComponent from "@/components/TitleComponent.astro";
import JobList from "@/components/JobList.jsx";
import Layout from "../layouts/PageLayout.astro";
import PageMeta from "@/data/aboutUs";
const { careerTitles } = PageMeta;
// const response = await fetch("https://job-api.saharaa.info");
---

<Layout title="saharaa.ai" active="aboutUs" isFooterSlot={true}>
  <slot slot="base-layout">
    <div
      id="sectionHero"
      class="w-screen h-screen first-screen-bottom-mask-wrap relative"
    >
    </div>

    <div
      id="sectionTitle"
      class="w-screen h-screen absolute left-0 top-0 pointer-events-none"
    >
      <TitleComponent titles={careerTitles} />
    </div>
  </slot>

  <div class="pt-[6.25rem] tablet:pt-0" id="positions">
    <JobList client:load />
  </div>

  <div
    id="sectionCareer"
    class="text-center pt-[8.625rem] pb-[11rem] text-s3 font-[Manrope] text-light-200 tablet:hidden"
  >
    None of these apply to you? We'd still love to stay in touch. Follow Sahara
    on <a class="underline" href="https://www.linkedin.com/company/saharalabs-ai/">LinkedIn</a>.
  </div>
  <div slot="footer" class="pt-[7.625rem] tablet:pt-[3.75rem]">
    <h1 class="text-h3 tablet:text-h3 tablet:text-center font-[Manrope]">
      Start Your
    </h1>
    <h1 class="text-h3 tablet:text-h3 tablet:text-center font-[Manrope]">
      Sahara Journey
    </h1>
  </div>
  <script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    import { makeCommonAppearEffect } from "@/utils/gsap.utils";
    import HeroView from "@/webgl/HeroView";

    gsap.registerPlugin(ScrollTrigger);
    makeCommonAppearEffect();

    const heroEl = document.getElementById("sectionHero");
    if (heroEl) {
      const viewer = new HeroView(heroEl, { layout: "two" });
      viewer.useSetup();
      viewer.play();
      gsap.to(heroEl, {
        scrollTrigger: {
          trigger: "#positions",
          start: "top bottom",
          end: "top top-=30",
          scrub: true,
        },
        opacity: 0,
      });
      ScrollTrigger.create({
        trigger: "#positions",
        start: "top-=150 top",
        onLeaveBack: () => {
          viewer.play();
        },
        onEnter: () => {
          viewer.stop();
        },
      });
    }
  </script>
</Layout>
